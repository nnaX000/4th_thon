name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew build -x test  # 테스트 제외하고 빌드

      - name: Build Docker Image
        run: |
          docker build -t nayoungg/4th_thon .

      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      - name: Push Docker Image to Docker Hub
        run: |
          docker tag nayoungg/4th_thon nayoungg/4th_thon:latest
          docker push nayoungg/4th_thon:latest

      - name: Set up SSH
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem

      - name: Deploy to EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_key.pem ubuntu@${{ secrets.EC2_HOST }} << EOF
            # Docker 로그인
            docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"

            # 기존 컨테이너 삭제
            if [ "\$(docker ps -aq -f name=4th_thon)" ]; then
              echo "기존 컨테이너 중지 및 삭제..."
              docker stop 4th_thon
              docker rm 4th_thon
            else
              echo "4th_thon 컨테이너가 존재하지 않음. 삭제 스킵!"
            fi

            # 기존 이미지 삭제
            if [ "\$(docker images -q nayoungg/4th_thon)" ]; then
              echo "기존 Docker 이미지 삭제..."
              docker rmi nayoungg/4th_thon
            else
              echo "nayoungg/4th_thon 이미지가 존재하지 않음. 삭제 스킵!"
            fi

            # 최신 이미지 풀받기
            docker pull nayoungg/4th_thon:latest

            # 컨테이너 실행
            docker run -d --name 4th_thon -p 8080:8080 \
                       -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
                       -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
                       -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
                       -e SPRING_JPA_HIBERNATE_DDL_AUTO=update \
                       nayoungg/4th_thon
          
          EOF